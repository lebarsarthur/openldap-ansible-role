---
- include_vars: "{{ansible_os_family}}-vars.yml"
- include_tasks: "{{ansible_os_family}}.yml"

- name: Start ldap service
  service:
    name: slapd
    state: started
    enabled: yes

- name: Register encripted password
  command: slappasswd -s "{{ldap_bind_pw}}"
  register: ldap_encripted_password

- name: Copy db templates
  template:
    src: db.ldif
    dest: /tmp

- name: Load ddbb template into ldap
  command: ldapmodify -Y EXTERNAL  -H ldapi:/// -f /tmp/db.ldif

- name: Load some schemas (ignoring duplicate entries error for idempotence)
  command: "ldapadd -Y EXTERNAL -H ldapi:/// -f {{schema_path}}/{{item}}"
  register: ldap_result_code
  failed_when: ldap_result_code.rc not in [0,80]
  changed_when: ldap_result_code.rc not in [0,80]
  with_items:
    - cosine.ldif
    - nis.ldif
    - inetorgperson.ldif

- name: Load ldap root entry
  ldap_entry:
    server_uri: "{{ldap_server_uri}}"
    bind_dn: "{{ldap_basedn}}"
    bind_pw: "{{ldap_bind_pw}}"
    dn: "{{ldap_basedn}}"
    objectClass:
      - top
      - domain

- name: Load OUs
  community.general.ldap_entry:
    server_uri: "{{ ldap_auth.server_uri }}"
    bind_dn: "{{ ldap_auth.bind_dn }}"
    bind_pw: "{{ ldap_auth.bind_pw }}"
    dn: "ou={{ item.value.ou }},{{ item.value.parent_ou }}"
    objectClass:
      - organizationalUnit
      - top
    attributes:
      ou: "{{ item.value.ou }}"
  with_dict: "{{ ldap_ous }}"

- name: Load groups
  community.general.ldap_entry:
    server_uri: "{{ ldap_auth.server_uri }}"
    bind_dn: "{{ ldap_auth.bind_dn }}"
    bind_pw: "{{ ldap_auth.bind_pw }}"
    dn: "cn={{ item.name }},{{ item.parent_ou }}"
    objectClass:
      - posixGroup
      - top
    attributes:
      gidNumber: "{{ item.gidNumber }}"
  with_items: "{{ ldap_groups }}"

- name: Load users
  community.general.ldap_entry:
    server_uri: "{{ ldap_auth.server_uri }}"
    bind_dn: "{{ ldap_auth.bind_dn }}"
    bind_pw: "{{ ldap_auth.bind_pw }}"
    dn: "uid={{ item.key }},{{ item.value.parent_ou }}"
    objectClass:
      - person
      - posixAccount
      - organizationalPerson
      - inetOrgPerson
      - top
      - shadowAccount
    attributes:
      cn: "{{ item.value.cn }}"
      givenname: "{{ item.value.givenname }}"
      sn: "{{ item.value.sn }}"
      uid: "{{ item.key }}"
      uidNumber: "{{ item.value.uidNumber }}"
      gidNumber: "{{ item.value.gidNumber }}"
      mail: "{{ item.value.mail }}"
      homeDirectory: "{{ item.value.homeDirectory }}"
      userpassword: "{{ item.value.userpassword }}"
      loginShell: "/bin/bash"
      # employeeNumber: "{{item.value.employeeNumber}}"
  with_dict: "{{ ldap_users }}"

- name: Add users to groups
  community.general.ldap_attrs:
    server_uri: "{{ ldap_auth.server_uri }}"
    bind_dn: "{{ ldap_auth.bind_dn }}"
    bind_pw: "{{ ldap_auth.bind_pw }}"
    dn: "cn={{ item.0.name }},{{ item.0.parent_ou }}"
    attributes:
      memberUid: "{{ item.1 }}"
    state: present
  with_subelements:
    - "{{ ldap_groups }}"
    - members

- name: Restart ldap service
  service:
    name: slapd
    state: restarted
